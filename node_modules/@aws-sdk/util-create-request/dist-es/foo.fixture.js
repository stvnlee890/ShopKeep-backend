import { constructStack } from "@aws-sdk/middleware-stack";
import { HttpRequest } from "@aws-sdk/protocol-http";
var output = { Data: "data", $metadata: {} };
var input = { String: "input" };
export var fooClient = {
    config: {},
    middlewareStack: constructStack(),
    send: function (command) {
        return command.resolveMiddleware(fooClient.middlewareStack, fooClient.config, undefined)({ input: input });
    },
    destroy: function () { },
};
export var operationCommand = {
    middlewareStack: constructStack(),
    input: {},
    resolveMiddleware: function (stack) {
        var concatStack = stack.concat(operationCommand.middlewareStack);
        return concatStack.resolve(function () { return Promise.resolve({ output: output, response: {} }); }, {});
    },
};
export var httpRequest = new HttpRequest({
    protocol: "https:",
    path: "/foo",
    hostname: "foo-service.us-east-1.amazonaws.com",
    headers: {},
    method: "GET",
    body: "",
});
